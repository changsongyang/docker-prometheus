global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  scrape_timeout:      10s
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these extra labels to all timeseries collected by this Prometheus instance.
  #labels:
  #  monitor: 'codelab-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus_local'
    metrics_path: /prometheus/metrics

    target_groups:
      - targets: ['localhost:9090']

  - job_name: 'kmaster'

    target_groups:
      - targets: ['{{getenv "ETCD_HOST"}}:8080']

  - job_name: 'knode'

    target_groups:
      - targets: [ {{range $index,$nodeJson := getvs "/registry/minions/*"}}{{$node := json $nodeJson}}{{if $index}}, {{end}}'{{$node.spec.externalID}}:10255'{{end}} ]

{{range $serviceJson := getvs "/registry/services/specs/default/*"}}
  {{$service := json $serviceJson}}
  {{$defaultPort := index $service.spec.ports 0}}
  {{if $service.metadata.annotations}}
    {{$annotation := (index $service.metadata.annotations "metrics")}}
    {{if $annotation}}

  - job_name: '{{$service.metadata.name}}'
    metrics_path: {{$annotation}}

    target_groups:
      - targets: [ 
          {{range $index, $podJson := getvs "/registry/pods/default/*"}}
            {{$pod := json $podJson}}
            {{if eq $service.metadata.name $pod.metadata.labels.name}}
            '{{$pod.status.podIP}}:{{$defaultPort.port}}', 
            {{end}}
          {{end}}
        ]

    {{end}}
  {{end}}
{{end}}
